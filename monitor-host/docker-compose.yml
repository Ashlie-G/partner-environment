version: '2.1'


#########################################################
####                   Networking                    ####
#########################################################

services:
#########################################################
####                    LOGGING                      ####
#########################################################

  # Aggregates logs and forwards them to Elasticsearch.
  logstash:
    container_name: monit-logstash
    image: docker.elastic.co/logstash/logstash-oss:$ELK_TAG
    expose:
      - 12201/udp
      - 5044
    ports:
      - "12201:12201/udp"
    volumes:
      - ./config/logstash/config:/config
      - ./config/logstash/patterns:/opt/logstash/extra_patterns
    restart: always
    labels:
      container_group: logging
    hostname: logstash
    network_mode: aca-engine_default
    #    networks:
      #      default:
      #        ipv4_address: 172.16.0.10
    logging:
      driver: json-file
      options:
        max-size: 99m
        labels: container_group
    command: logstash -f /config

#########################################################

  # Logstash configs can be a hassle. Run 'docker-compose run --rm validate-logstash-config' in order to quickly check your logstash config.
  validate-logstash-config:
    container_name: monit_validate-logstash
    image: docker.elastic.co/logstash/logstash-oss:$ELK_TAG
    volumes:
      - ./config/logstash/config:/config
    command: logstash -t -f /config

#########################################################

  # Storage and search backend. Gets all logs from Logstash and is the backend that Kibana runs on.
  elasticsearch:
    container_name: monit-elastic
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:$ELK_TAG
    ports:
      - ${ELASTICSEARCH_HOST_PORT:-9201}:9200
    expose:
      - 9200
    restart: always
    command: elasticsearch -Etransport.host=127.0.0.1 -Ebootstrap.memory_lock=false
    labels:
      container_group: logging
    volumes:
      - ./data/elastic/data:/usr/share/elasticsearch/data/
    logging:
      driver: json-file
      options:
        max-size: 99m
        labels: container_group
    hostname: elasticsearch
    network_mode: aca-engine_default
    #networks:
    #  default:
    #    aliases:
    #      - elasticsearchhost # Required for elastalert.
    #    ipv4_address: 172.16.0.11
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m

#########################################################

  # Takes care of piling piling up Elasticsearch indices/logs. Can do many other things as well.
  # Set up a cron or Jenkins job that runs "docker-compose run --rm curator --config /config.yml /action-file.yml" every once in a while.
  curator:
    container_name: monit-curator
    image: bobrik/curator:5.7.6
    volumes:
      - ./config/curator/action-file.yml:/action-file.yml
      - ./config/curator/config.yml:/config.yml
    labels:
      container_group: logging
    logging:
      driver: json-file
      options:
        max-size: 99m
        labels: container_group
    network_mode: aca-engine_default

#########################################################

  # Pretty frontend to explore and check out all your logs.
  kibana:
    container_name: monit-kibana
    image: docker.elastic.co/kibana/kibana-oss:$ELK_TAG
    expose:
      - 5601
    restart: always
    labels:
      container_group: logging
    logging:
      driver: json-file
      options:
        max-size: 99m
        labels: container_group
    hostname: kibana
    network_mode: aca-engine_default
    #networks:
    #  default:
    #    ipv4_address: 172.16.0.12
    environment:
      - NODE_OPTIONS=--max-old-space-size=200 # fixes memory leak (https://github.com/elastic/kibana/issues/5170)
      - VIRTUAL_HOST=kibana.${DOMAIN}
      - HTTPS_METHOD=nohttp
      - ELASTICSEARCH_HOSTS="http://monit-elastic:9200"

#########################################################

  # Tool to run queries against your Elasticsearch and when alert when finding certain logs.
  elastalert:
    container_name: monit-elastalert
#    build: elastalert/
#image: jertel/elastalert-docker:0.1.33
    image: jertel/elastalert-docker:0.2.1
    restart: always
    volumes:
      - ./config/elastalert/log:/opt/log
      - ./config/elastalert/config:/opt/config
      - ./config/elastalert/rules:/opt/rules
    environment:
      - ELASTICSEARCH_HOST=monit_elastic
    labels:
      container_group: monitoring
    logging:
      driver: json-file
      options:
        max-size: 99m
        labels: container_group
    hostname: elastalert
    network_mode: aca-engine_default
    #networks:
    #  default:
    #    ipv4_address: 172.16.0.13

########################################################
###                      PROXY                      ####
########################################################

  nginx-proxy:
    image: nginx:1.15.0
    container_name: monit-nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - ./config/nginx/conf.d/proxy.conf:/etc/nginx/conf.d/proxy.conf
      - ./config/dockergen/default.vhost:/etc/nginx/vhost.d/default # fixing https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion/issues/138
      - ./data/nginx-proxy/certs:/etc/nginx/certs:ro
      - ./data/nginx-proxy/htpasswd:/etc/nginx/htpasswd:ro
    labels:
      container_group: proxy
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: ""
    logging:
      driver: json-file
      options:
        max-size: 99m
    network_mode: aca-engine_default

#########################################################

  nginx-dockergen:
    image: jwilder/docker-gen:0.7.3
    container_name: monit-nginx-dockergen
    restart: always
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./config/dockergen/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
    environment:
      - DEFAULT_HOST="${DOMAIN}"
    command: -notify-sighup nginx-proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    labels:
      container_group: proxy
      com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen: ""
    logging:
      driver: json-file
      options:
        max-size: 99m
    network_mode: aca-engine_default

#########################################################

        #  nginx-letsencrypt:
        #    image: jrcs/letsencrypt-nginx-proxy-companion:v1.8.1
        #    restart: always
        #    volumes_from:
        #      - nginx-proxy
        #    volumes:
        #      - /var/run/docker.sock:/var/run/docker.sock:ro
        #      - ../storage/nginx-proxy/certs:/etc/nginx/certs:rw
        #    environment:
        #      - NGINX_DOCKER_GEN_CONTAINER="nginx-gen"
        #      - DEBUG=false
        #    labels:
        #      container_group: proxy
        #    logging:
        #      driver: json-file
        #      options:
        #        max-size: 99m
